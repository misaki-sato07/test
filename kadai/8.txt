■問題文
2つの文字列に対して部分的に文字列を切り出して連結する関数を作成せよ。

関数のプロトタイプ宣言は次のとおり。
char *substr_and_concat(
		char *out, 				/* 出力用バッファのポインタ */
		int outlen;				/* 出力用バッファのサイズ */
		const char *in1,		/* 入力データ1のポインタ */
		int offset1,			/* 入力データ1から切り出すオフセット */
		int len1,				/* 入力データ1から切り出す長さ */
		const char *in2,		/* 入力データ2のポインタ */
		int offset2,			/* 入力データ2から切り出すオフセット */
		int len2,				/* 入力データ2から切り出す長さ */

オフセットには0以上の値を指定する。
0は文字列の先頭を指す。
オフセットが文字列の長さを超える場合、その文字列からは何も切り出さない。

切り出す長さに-1を指定すると、文字列の末尾までを切り出す。

outへの出力はoutlenの値の長さだけ出力する。
末尾にヌル文字を出力する。
出力するサイズがoutlenを超える場合、outlenに収まるよう文字列を出力する。
この場合でも、末尾にヌル文字を出力する。

substr_and_concat関数の戻り値はoutポインタそのものとする。

■制約
substr_and_concat関数だけでなく、その関数を呼び出すmain関数も併せて作成すること。
それぞれの関数は別々のファイルで作成すること。

次に記すファイル名にすること。
kadaiXX.c        main関数のソースファイル
kadaiXX_func.c   substr_and_concat関数のソースファイル
kadaiXX_func.h   substr_and_concat関数のヘッダファイル

■入力
処理対象の2つの文字列、オフセット、切り出す長さはコマンドの引数で指定する。

Usage: command str1 offset1 len1 str2 offset2 len2

■出力
「■問題文」に記した関数で2つの文字列を処理して、
その処理後の文字列を標準出力に出力する。

出力する文字がない場合は、改行コードも出力しない。

■入力例1
$ command abcdef 1 3 ghi 2 -1

※abcdefに対して、オフセット1、長さ3
※ghiに対して、オフセット2、長さ-1つまり文字列の末尾まで、という意味

■出力例2
bcdi

■入力例2
$ command abc 10 1 def 0 -1

■出力例2
def
